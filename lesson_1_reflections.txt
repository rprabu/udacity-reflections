-- How did viewing a diff between two versions of a file help you see the bug that was introduced?

The output helps us focus only on portions that changed between the two versions. 



-- How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

Helps track changes through the life time of the file. Helps us to understand and analyze how we progressed through the lifecycle of the file. 



-- What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

We can make logically well-defined commits. Each commit will be a logical step. IN the case of autimatic saving this logical chunking does not exist.



-- Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Git is coding friendly and changes in such scenarios are inter-connected. Git thus allows saving multiple files in one commit. Others do not have this context and are more general purpose systems.



-- How can you use the commands git log and git diff to view the history of files?

git log: tells us every commit that was made with user entered message about each commit. 

git diff: tells us difference between two different commits; how many lines were added/deleted.



-- How might using version control make you more confident to make changes that could break something?

We can retrieve/restore the previous working version using git checkout. 



-- Now that you have your workspace set up, what do you want to try using Git for?

Writing code.
